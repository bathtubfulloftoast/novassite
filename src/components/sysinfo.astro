---
import os from 'os';
import si from 'systeminformation';


var now = new Date();
var dd = String(now.getDate()).padStart(2, '0');
var mm = String(now.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = now.getFullYear();

var hours = String((now.getHours())).padStart(2, '0');

var minutes = String((now.getMinutes()) % 60).padStart(2, '0');
let seconds = now.getSeconds();

const currentTimeZone = '(' + new Date().toString().match(/\(([A-Za-z\s].*)\)/)[1] + ')';

const year = new Date().getFullYear();
const copyright = `Novas Site Â©${year}`;
const currentdate = mm + '/' + dd + '/' + yyyy + ' ' + hours + ':' + minutes + ' '+ currentTimeZone;


const architecture = os.arch() ?? "Unknown Architecture"; // x64

async function getOS() {
    try {
        const data = await si.osInfo();
        return data;
    } catch (error) {
        console.error(error);
        return null;
    }
}

const operatingsystem = await getOS();

---
<div class="blurb">
<b>System Info:</b><br>
compiled with {currentdate}<br>
compiled on <a href="/deviceinfo.json" target="_top">{operatingsystem.hostname} using {operatingsystem.distro} {operatingsystem.release} {architecture}</a><br>
<a id="version" target="_top">uhhh update</a>
</div>

<script>
document.addEventListener("DOMContentLoaded", async function() {

let response = "error: response unset";
let counter = 0;
let found = false;
let url = "https://github.com/bathtubfulloftoast/novassite";

async function weather() {
const commitResponse = await fetch('/commitID.txt');
const currentCommit = await commitResponse.text();
// const currentCommit = "541b863ca5e89c49500a4ec86b53a9dee7bfd4d5";
let hubCommit;

async function getlinks() {
  if (!hubCommit) {
    const response = await fetch('https://api.github.com/repos/bathtubfulloftoast/novassite/commits');
    const data = await response.json();
    hubCommit = data;
  }
  return hubCommit;
}

hubCommit = await getlinks();



for (var item of hubCommit) {
counter++;
if (item.sha === currentCommit) {
found = true;
break;
}
}

if(found) {
if(counter != 1) {
response = `sites is on outdated version: ${currentCommit.slice(0, 7)} ${counter-1} commit${(counter-1 > 1 ? 's' : '')} behind current version ${hubCommit[0].sha.slice(0,7)}`;
url = `https://github.com/bathtubfulloftoast/novassite/compare/${currentCommit}..${hubCommit[0].sha}`;
}
else if (counter == 1) {
response = `site is on current version: ${currentCommit.slice(0, 7)}`;
url = `https://github.com/bathtubfulloftoast/novassite/commit/${currentCommit}`;
}
} else {
response = `site is on development version: ${currentCommit.slice(0, 7)} latest public release is ${hubCommit[0].sha.slice(0,7)}`;
url = `https://github.com/bathtubfulloftoast/novassite/commit/${hubCommit[0].sha}`;
}

document.getElementById("version").innerHTML = response;
document.getElementById("version").href = url;
}
await weather();
});
</script>
